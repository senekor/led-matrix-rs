//! Definitions of common characters.

#![allow(non_upper_case_globals)]

use super::Character;

pub const ZERO: Character = Character::new(
    &[
        (0, 1),
        (0, 2),
        (4, 1),
        (4, 2),
        (0, 4),
        (0, 5),
        (4, 4),
        (4, 5),
        (0, 3),
        (4, 3),
        (1, 0),
        (2, 0),
        (3, 0),
        (1, 6),
        (2, 6),
        (3, 6),
    ],
    5,
);
pub const ONE: Character = Character::new(
    &[
        (0, 0),
        (1, 0),
        (2, 0),
        (3, 0),
        (4, 0),
        (2, 1),
        (2, 2),
        (2, 3),
        (2, 4),
        (2, 5),
        (2, 6),
        (1, 5),
        (0, 4),
    ],
    5,
);
pub const TWO: Character = Character::new(
    &[
        (0, 0),
        (1, 0),
        (2, 0),
        (3, 0),
        (4, 0),
        (0, 1),
        (1, 2),
        (2, 3),
        (3, 3),
        (4, 4),
        (4, 5),
        (3, 6),
        (2, 6),
        (1, 6),
        (0, 5),
    ],
    5,
);
pub const THREE: Character = Character::new(
    &[
        (0, 1),
        (1, 0),
        (2, 0),
        (3, 0),
        (4, 1),
        (4, 2),
        (2, 3),
        (3, 3),
        (4, 4),
        (4, 5),
        (3, 6),
        (2, 6),
        (1, 6),
        (0, 5),
    ],
    5,
);
pub const FOUR: Character = Character::new(
    &[
        (3, 0),
        (3, 1),
        (3, 2),
        (3, 3),
        (3, 4),
        (3, 5),
        (3, 6),
        (4, 2),
        (2, 2),
        (1, 2),
        (0, 2),
        (0, 3),
        (1, 4),
        (2, 5),
    ],
    5,
);
pub const FIVE: Character = Character::new(
    &[
        (1, 0),
        (2, 0),
        (3, 0),
        (0, 1),
        (4, 1),
        (4, 2),
        (4, 3),
        (3, 4),
        (2, 4),
        (1, 4),
        (0, 4),
        (0, 5),
        (0, 6),
        (1, 6),
        (2, 6),
        (3, 6),
        (4, 6),
    ],
    5,
);
pub const SIX: Character = Character::new(
    &[
        (1, 0),
        (2, 0),
        (3, 0),
        (0, 1),
        (0, 2),
        (4, 1),
        (4, 2),
        (3, 3),
        (2, 3),
        (1, 3),
        (0, 3),
        (0, 4),
        (0, 5),
        (1, 6),
        (2, 6),
        (3, 6),
        (4, 5),
    ],
    5,
);
pub const SEVEN: Character = Character::new(
    &[
        (0, 6),
        (1, 6),
        (2, 6),
        (3, 6),
        (4, 6),
        (4, 5),
        (3, 4),
        (2, 3),
        (2, 2),
        (2, 1),
        (2, 0),
    ],
    5,
);
pub const EIGHT: Character = Character::new(
    &[
        (1, 0),
        (2, 0),
        (3, 0),
        (1, 3),
        (2, 3),
        (3, 3),
        (1, 6),
        (2, 6),
        (3, 6),
        (0, 1),
        (0, 2),
        (4, 1),
        (4, 2),
        (0, 4),
        (0, 5),
        (4, 4),
        (4, 5),
    ],
    5,
);
pub const NINE: Character = Character::new(
    &[
        (1, 0),
        (2, 0),
        (3, 0),
        (1, 3),
        (2, 3),
        (3, 3),
        (1, 6),
        (2, 6),
        (3, 6),
        (0, 1),
        (4, 3),
        (4, 1),
        (4, 2),
        (0, 4),
        (0, 5),
        (4, 4),
        (4, 5),
    ],
    5,
);
pub const BCOLON: Character = Character::new(
    &[
        (0, 5),
        (0, 4),
        (1, 5),
        (1, 4),
        (0, 2),
        (0, 1),
        (1, 2),
        (1, 1),
    ],
    5,
);
pub const A: Character = Character::new(
    &[
        (0, 0),
        (0, 1),
        (0, 2),
        (0, 3),
        (0, 4),
        (0, 5),
        (1, 6),
        (2, 6),
        (3, 6),
        (4, 0),
        (4, 1),
        (4, 2),
        (4, 3),
        (4, 4),
        (4, 5),
        (1, 2),
        (2, 2),
        (3, 2),
    ],
    5,
);
pub const B: Character = Character::new(
    &[
        (1, 0),
        (2, 0),
        (3, 0),
        (1, 3),
        (2, 3),
        (3, 3),
        (1, 6),
        (2, 6),
        (3, 6),
        (0, 1),
        (0, 2),
        (4, 1),
        (4, 2),
        (0, 4),
        (0, 5),
        (4, 4),
        (4, 5),
        (0, 6),
        (0, 0),
        (0, 3),
    ],
    5,
);
pub const C: Character = Character::new(
    &[
        (1, 0),
        (2, 0),
        (3, 0),
        (1, 6),
        (2, 6),
        (3, 6),
        (0, 1),
        (0, 2),
        (0, 4),
        (0, 5),
        (0, 3),
    ],
    4,
);
pub const D: Character = Character::new(
    &[
        (1, 0),
        (2, 0),
        (3, 0),
        (1, 6),
        (2, 6),
        (3, 6),
        (0, 1),
        (0, 2),
        (4, 1),
        (4, 2),
        (0, 4),
        (0, 5),
        (4, 4),
        (4, 5),
        (0, 0),
        (0, 6),
        (4, 3),
        (0, 3),
    ],
    5,
);
pub const E: Character = Character::new(
    &[
        (1, 0),
        (2, 0),
        (3, 0),
        (4, 0),
        (1, 3),
        (2, 3),
        (3, 3),
        (1, 6),
        (2, 6),
        (3, 6),
        (0, 1),
        (0, 2),
        (0, 4),
        (0, 5),
        (0, 3),
        (0, 0),
        (0, 6),
        (4, 6),
    ],
    5,
);
pub const F: Character = Character::new(
    &[
        (1, 3),
        (2, 3),
        (3, 3),
        (1, 6),
        (2, 6),
        (3, 6),
        (0, 1),
        (0, 2),
        (0, 4),
        (0, 5),
        (0, 3),
        (0, 0),
        (0, 6),
        (4, 6),
    ],
    5,
);
pub const G: Character = Character::new(
    &[
        (1, 0),
        (2, 0),
        (3, 0),
        (0, 1),
        (0, 2),
        (0, 3),
        (0, 4),
        (0, 5),
        (1, 6),
        (2, 6),
        (3, 6),
        (4, 1),
        (4, 2),
        (4, 3),
        (4, 6),
        (3, 3),
        (2, 3),
        (2, 2),
    ],
    5,
);
pub const H: Character = Character::new(
    &[
        (1, 3),
        (2, 3),
        (3, 3),
        (0, 1),
        (0, 2),
        (4, 1),
        (4, 2),
        (0, 4),
        (0, 5),
        (4, 4),
        (4, 5),
        (0, 3),
        (4, 3),
        (0, 0),
        (0, 6),
        (4, 0),
        (4, 6),
    ],
    5,
);
pub const I: Character = Character::new(
    &[
        (0, 0),
        (1, 0),
        (2, 0),
        (1, 1),
        (1, 2),
        (1, 3),
        (1, 4),
        (1, 5),
        (0, 6),
        (1, 6),
        (2, 6),
    ],
    3,
);
pub const J: Character = Character::new(
    &[
        (3, 1),
        (3, 2),
        (3, 3),
        (3, 4),
        (3, 5),
        (3, 6),
        (2, 0),
        (1, 0),
        (0, 1),
    ],
    4,
);
pub const K: Character = Character::new(
    &[
        (1, 3),
        (2, 3),
        (0, 1),
        (0, 2),
        (4, 1),
        (0, 4),
        (0, 5),
        (0, 3),
        (0, 0),
        (0, 6),
        (3, 2),
        (3, 4),
        (4, 5),
        (4, 6),
        (4, 0),
        (4, 1),
    ],
    5,
);
pub const L: Character = Character::new(
    &[
        (1, 0),
        (2, 0),
        (3, 0),
        (4, 0),
        (0, 1),
        (0, 2),
        (0, 3),
        (0, 4),
        (0, 5),
        (0, 0),
        (0, 6),
    ],
    5,
);
pub const M: Character = Character::new(
    &[
        (0, 1),
        (0, 2),
        (4, 1),
        (4, 2),
        (0, 4),
        (0, 5),
        (4, 4),
        (4, 5),
        (0, 3),
        (4, 3),
        (0, 0),
        (0, 6),
        (4, 0),
        (4, 6),
        (1, 5),
        (3, 5),
        (2, 3),
        (2, 4),
    ],
    5,
);
pub const N: Character = Character::new(
    &[
        (0, 1),
        (0, 2),
        (4, 1),
        (4, 2),
        (0, 4),
        (0, 5),
        (4, 4),
        (4, 5),
        (0, 3),
        (4, 3),
        (0, 0),
        (0, 6),
        (4, 0),
        (4, 6),
        (1, 4),
        (2, 3),
        (3, 2),
    ],
    5,
);
pub const O: Character = Character::new(
    &[
        (0, 1),
        (0, 2),
        (4, 1),
        (4, 2),
        (0, 4),
        (0, 5),
        (4, 4),
        (4, 5),
        (0, 3),
        (4, 3),
        (1, 0),
        (2, 0),
        (3, 0),
        (1, 6),
        (2, 6),
        (3, 6),
    ],
    5,
);
pub const P: Character = Character::new(
    &[
        (1, 3),
        (2, 3),
        (3, 3),
        (1, 6),
        (2, 6),
        (3, 6),
        (0, 1),
        (0, 2),
        (0, 4),
        (0, 5),
        (0, 3),
        (0, 0),
        (0, 6),
        (4, 4),
        (4, 5),
    ],
    5,
);
pub const Q: Character = Character::new(
    &[
        (0, 1),
        (0, 2),
        (4, 1),
        (4, 2),
        (0, 4),
        (0, 5),
        (4, 4),
        (4, 5),
        (0, 3),
        (4, 3),
        (1, 0),
        (2, 0),
        (3, 0),
        (1, 6),
        (2, 6),
        (3, 6),
        (4, 0),
        (3, 1),
        (2, 2),
    ],
    5,
);
pub const R: Character = Character::new(
    &[
        (1, 3),
        (2, 3),
        (3, 3),
        (1, 6),
        (2, 6),
        (3, 6),
        (0, 1),
        (0, 2),
        (0, 4),
        (0, 5),
        (0, 3),
        (0, 0),
        (0, 6),
        (4, 4),
        (4, 5),
        (4, 2),
        (4, 1),
        (4, 0),
    ],
    5,
);
pub const S: Character = Character::new(
    &[
        (4, 1),
        (4, 2),
        (0, 4),
        (0, 5),
        (1, 0),
        (2, 0),
        (3, 0),
        (1, 6),
        (2, 6),
        (3, 6),
        (3, 3),
        (2, 3),
        (1, 3),
        (0, 0),
    ],
    5,
);
pub const T: Character = Character::new(
    &[
        (2, 0),
        (2, 1),
        (2, 2),
        (2, 3),
        (2, 4),
        (2, 5),
        (2, 6),
        (0, 6),
        (1, 6),
        (3, 6),
        (4, 6),
    ],
    5,
);
pub const U: Character = Character::new(
    &[
        (0, 1),
        (0, 2),
        (4, 1),
        (4, 2),
        (0, 4),
        (0, 5),
        (4, 4),
        (4, 5),
        (0, 3),
        (4, 3),
        (1, 0),
        (2, 0),
        (3, 0),
        (0, 6),
        (4, 6),
    ],
    5,
);
pub const V: Character = Character::new(
    &[
        (0, 2),
        (4, 2),
        (0, 4),
        (0, 5),
        (4, 4),
        (4, 5),
        (0, 3),
        (4, 3),
        (0, 6),
        (4, 6),
        (1, 1),
        (3, 1),
        (2, 0),
    ],
    5,
);
pub const W: Character = Character::new(
    &[
        (0, 1),
        (0, 2),
        (4, 1),
        (4, 2),
        (0, 4),
        (0, 5),
        (4, 4),
        (4, 5),
        (0, 3),
        (4, 3),
        (0, 0),
        (0, 6),
        (4, 0),
        (4, 6),
        (1, 1),
        (3, 1),
        (2, 2),
        (2, 3),
    ],
    5,
);
pub const X: Character = Character::new(
    &[
        (0, 0),
        (0, 1),
        (0, 5),
        (0, 6),
        (4, 0),
        (4, 1),
        (4, 5),
        (4, 6),
        (2, 3),
        (1, 4),
        (3, 4),
        (1, 2),
        (3, 2),
    ],
    5,
);
pub const Y: Character = Character::new(
    &[
        (2, 0),
        (2, 1),
        (2, 2),
        (2, 3),
        (1, 4),
        (3, 4),
        (0, 5),
        (0, 6),
        (4, 5),
        (4, 6),
    ],
    5,
);
pub const Z: Character = Character::new(
    &[
        (1, 0),
        (2, 0),
        (3, 0),
        (4, 0),
        (1, 6),
        (2, 6),
        (3, 6),
        (0, 0),
        (0, 6),
        (4, 6),
        (4, 5),
        (3, 4),
        (2, 3),
        (1, 2),
        (0, 1),
    ],
    5,
);
pub const a: Character = Character::new(
    &[
        (1, 0),
        (2, 0),
        (3, 0),
        (4, 0),
        (4, 1),
        (4, 2),
        (4, 3),
        (3, 2),
        (2, 2),
        (1, 2),
        (0, 1),
        (3, 4),
        (2, 4),
        (1, 4),
    ],
    5,
);
pub const b: Character = Character::new(
    &[
        (0, 0),
        (0, 1),
        (0, 2),
        (0, 3),
        (0, 4),
        (0, 5),
        (0, 6),
        (1, 0),
        (2, 0),
        (3, 0),
        (4, 1),
        (4, 2),
        (3, 3),
        (2, 3),
        (1, 3),
        (0, 3),
    ],
    5,
);
pub const c: Character = Character::new(
    &[
        (4, 1),
        (4, 3),
        (3, 0),
        (2, 0),
        (1, 0),
        (0, 1),
        (0, 2),
        (0, 3),
        (1, 4),
        (2, 4),
        (3, 4),
    ],
    5,
);
pub const d: Character = Character::new(
    &[
        (4, 0),
        (4, 1),
        (4, 2),
        (4, 3),
        (4, 4),
        (4, 5),
        (4, 6),
        (3, 0),
        (2, 0),
        (1, 0),
        (0, 1),
        (0, 2),
        (1, 3),
        (2, 3),
        (3, 3),
    ],
    5,
);
pub const e: Character = Character::new(
    &[
        (4, 0),
        (3, 0),
        (2, 0),
        (1, 0),
        (0, 1),
        (0, 2),
        (0, 3),
        (1, 4),
        (2, 4),
        (3, 4),
        (4, 3),
        (4, 2),
        (3, 2),
        (2, 2),
        (1, 2),
    ],
    5,
);
pub const f: Character = Character::new(
    &[
        (1, 0),
        (1, 1),
        (1, 2),
        (1, 3),
        (1, 4),
        (1, 5),
        (2, 6),
        (3, 6),
        (4, 5),
        (0, 3),
        (2, 3),
    ],
    5,
);
pub const g: Character = Character::new(
    &[
        (4, 0),
        (3, 0),
        (2, 0),
        (1, 0),
        (0, 3),
        (1, 4),
        (2, 4),
        (3, 4),
        (4, 3),
        (4, 2),
        (3, 2),
        (2, 2),
        (1, 2),
        (4, 1),
    ],
    5,
);
pub const h: Character = Character::new(
    &[
        (0, 0),
        (0, 1),
        (0, 2),
        (0, 3),
        (0, 4),
        (0, 5),
        (0, 6),
        (4, 1),
        (4, 2),
        (3, 3),
        (2, 3),
        (1, 3),
        (0, 3),
        (4, 0),
    ],
    5,
);
pub const i: Character = Character::new(
    &[
        (2, 0),
        (1, 0),
        (0, 0),
        (1, 1),
        (1, 2),
        (1, 3),
        (1, 4),
        (1, 6),
        (0, 4),
    ],
    3,
);
pub const j: Character = Character::new(
    &[
        (3, 6),
        (2, 4),
        (3, 4),
        (3, 3),
        (3, 2),
        (3, 1),
        (2, 0),
        (1, 0),
        (0, 1),
    ],
    4,
);
pub const k: Character = Character::new(
    &[
        (0, 0),
        (0, 1),
        (0, 2),
        (0, 3),
        (0, 4),
        (0, 5),
        (0, 6),
        (1, 2),
        (2, 2),
        (3, 1),
        (4, 0),
        (3, 3),
        (4, 4),
    ],
    5,
);
pub const l: Character = Character::new(
    &[
        (1, 0),
        (1, 1),
        (1, 2),
        (1, 3),
        (1, 4),
        (1, 5),
        (1, 6),
        (0, 0),
        (2, 0),
        (0, 6),
    ],
    3,
);
pub const m: Character = Character::new(
    &[
        (0, 0),
        (2, 0),
        (4, 0),
        (0, 1),
        (2, 1),
        (4, 1),
        (0, 2),
        (2, 2),
        (4, 2),
        (0, 3),
        (2, 3),
        (4, 3),
        (0, 4),
        (1, 4),
        (2, 4),
        (3, 4),
    ],
    5,
);
pub const n: Character = Character::new(
    &[
        (0, 0),
        (4, 0),
        (0, 1),
        (4, 1),
        (0, 2),
        (4, 2),
        (0, 3),
        (4, 3),
        (0, 4),
        (1, 4),
        (2, 4),
        (3, 4),
    ],
    5,
);
pub const o: Character = Character::new(
    &[
        (1, 0),
        (2, 0),
        (3, 0),
        (4, 1),
        (4, 2),
        (4, 3),
        (3, 4),
        (2, 4),
        (1, 4),
        (0, 3),
        (0, 2),
        (0, 1),
    ],
    5,
);
pub const p: Character = Character::new(
    &[
        (0, 0),
        (0, 1),
        (0, 2),
        (0, 3),
        (0, 4),
        (1, 4),
        (2, 4),
        (3, 3),
        (2, 2),
        (1, 2),
    ],
    4,
);
pub const q: Character = Character::new(
    &[
        (3, 0),
        (3, 1),
        (3, 2),
        (3, 3),
        (3, 4),
        (2, 4),
        (1, 4),
        (0, 3),
        (1, 2),
        (2, 2),
    ],
    4,
);
pub const r: Character = Character::new(
    &[
        (0, 0),
        (0, 1),
        (0, 2),
        (0, 3),
        (0, 4),
        (1, 3),
        (2, 4),
        (3, 4),
        (4, 3),
    ],
    5,
);
pub const s: Character = Character::new(
    &[
        (0, 0),
        (1, 0),
        (2, 0),
        (3, 0),
        (4, 1),
        (3, 2),
        (2, 2),
        (1, 2),
        (0, 3),
        (1, 4),
        (2, 4),
        (3, 4),
        (4, 4),
    ],
    5,
);
pub const t: Character = Character::new(
    &[
        (1, 1),
        (1, 2),
        (1, 3),
        (1, 4),
        (1, 5),
        (1, 6),
        (0, 4),
        (2, 4),
        (2, 0),
        (3, 0),
    ],
    5,
);
pub const u: Character = Character::new(
    &[
        (4, 0),
        (4, 1),
        (4, 2),
        (4, 3),
        (4, 4),
        (3, 1),
        (2, 0),
        (1, 0),
        (0, 1),
        (0, 2),
        (0, 3),
        (0, 4),
    ],
    5,
);
pub const v: Character = Character::new(
    &[
        (4, 2),
        (4, 3),
        (4, 4),
        (0, 2),
        (0, 3),
        (0, 4),
        (3, 1),
        (1, 1),
        (2, 0),
    ],
    5,
);
pub const w: Character = Character::new(
    &[
        (4, 2),
        (4, 3),
        (4, 4),
        (0, 2),
        (0, 3),
        (0, 4),
        (3, 1),
        (1, 1),
        (2, 0),
        (2, 1),
        (2, 2),
        (4, 1),
        (4, 0),
        (0, 1),
        (0, 0),
    ],
    5,
);
pub const x: Character = Character::new(
    &[
        (0, 4),
        (1, 3),
        (2, 2),
        (3, 1),
        (4, 0),
        (4, 4),
        (3, 3),
        (1, 1),
        (0, 0),
    ],
    5,
);
pub const y: Character = Character::new(
    &[
        (0, 0),
        (1, 0),
        (2, 0),
        (3, 0),
        (4, 1),
        (4, 2),
        (4, 3),
        (4, 4),
        (3, 2),
        (2, 2),
        (1, 2),
        (0, 3),
        (0, 4),
    ],
    5,
);
pub const z: Character = Character::new(
    &[
        (0, 0),
        (1, 0),
        (2, 0),
        (3, 0),
        (4, 0),
        (1, 1),
        (2, 2),
        (3, 3),
        (4, 4),
        (3, 4),
        (2, 4),
        (1, 4),
        (0, 4),
    ],
    5,
);
pub const SPACE: Character = Character::new(&[], 3);
pub const AMPERSAND: Character = Character::new(
    &[
        (4, 0),
        (2, 0),
        (1, 0),
        (3, 1),
        (0, 1),
        (4, 2),
        (2, 2),
        (0, 2),
        (1, 3),
        (2, 4),
        (0, 4),
        (2, 5),
        (0, 5),
        (1, 6),
    ],
    5,
);
pub const SIN_QUOTE: Character = Character::new(&[(0, 6), (0, 5)], 1);
pub const L_PARENTH: Character =
    Character::new(&[(1, 0), (0, 1), (0, 2), (0, 3), (0, 4), (0, 5), (1, 6)], 2);
pub const R_PARENTH: Character =
    Character::new(&[(0, 0), (1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (0, 6)], 2);
pub const ASTERISK: Character = Character::new(
    &[
        (4, 1),
        (4, 3),
        (4, 5),
        (3, 2),
        (3, 3),
        (3, 4),
        (2, 1),
        (2, 2),
        (2, 3),
        (2, 4),
        (2, 5),
        (1, 2),
        (1, 3),
        (1, 4),
        (0, 1),
        (0, 3),
        (0, 5),
    ],
    5,
);
pub const PLUS: Character = Character::new(
    &[
        (2, 1),
        (2, 2),
        (2, 3),
        (2, 4),
        (2, 5),
        (4, 3),
        (3, 3),
        (1, 3),
        (0, 3),
    ],
    5,
);
pub const MINUS: Character = Character::new(&[(2, 3), (1, 3), (0, 3)], 3);
pub const EQUAL: Character = Character::new(&[(2, 2), (1, 2), (0, 2), (2, 4), (1, 4), (0, 4)], 3);
pub const F_STOP: Character = Character::new(&[(3, 0)], 1);
pub const EXCLAM: Character = Character::new(&[(0, 0), (0, 2), (0, 3), (0, 4), (0, 5), (0, 6)], 1);
pub const D_QUOTE: Character = Character::new(&[(2, 6), (2, 5), (0, 6), (0, 5)], 3);
pub const HASH: Character = Character::new(
    &[
        (1, 6),
        (1, 5),
        (1, 4),
        (1, 3),
        (1, 2),
        (1, 1),
        (1, 0),
        (3, 6),
        (3, 5),
        (3, 4),
        (3, 3),
        (3, 2),
        (3, 1),
        (3, 0),
        (2, 2),
        (2, 4),
        (4, 2),
        (0, 2),
        (4, 4),
        (0, 4),
    ],
    5,
);
pub const DOLLAR: Character = Character::new(
    &[
        (0, 1),
        (1, 1),
        (2, 1),
        (3, 1),
        (4, 2),
        (3, 3),
        (2, 3),
        (1, 3),
        (0, 4),
        (1, 5),
        (2, 5),
        (3, 5),
        (4, 5),
        (2, 6),
        (2, 4),
        (2, 2),
        (2, 0),
    ],
    5,
);
pub const PERCENT: Character = Character::new(
    &[
        (0, 1),
        (1, 2),
        (2, 3),
        (3, 4),
        (4, 5),
        (0, 5),
        (0, 6),
        (1, 5),
        (1, 6),
        (3, 0),
        (3, 1),
        (4, 0),
        (4, 1),
    ],
    5,
);
pub const CARET: Character = Character::new(&[(0, 4), (1, 5), (2, 6), (3, 5), (4, 4)], 5);
pub const D_CARET: Character = Character::new(&[(0, 2), (1, 1), (2, 0), (3, 1), (4, 2)], 5);
pub const COMMA: Character = Character::new(&[(1, 2), (1, 1), (0, 0)], 2);
pub const COLON: Character = Character::new(&[(0, 2), (0, 4)], 1);
pub const S_COLON: Character = Character::new(&[(1, 2), (1, 4), (0, 1)], 2);
pub const QUESTION: Character = Character::new(
    &[
        (2, 0),
        (2, 2),
        (3, 3),
        (4, 4),
        (4, 5),
        (3, 6),
        (2, 6),
        (1, 6),
        (0, 5),
    ],
    5,
);
pub const AT: Character = Character::new(
    &[
        (4, 0),
        (3, 0),
        (2, 0),
        (1, 0),
        (0, 1),
        (0, 2),
        (0, 3),
        (0, 4),
        (0, 5),
        (1, 6),
        (2, 6),
        (3, 6),
        (4, 5),
        (4, 4),
        (4, 3),
        (3, 2),
        (2, 2),
        (2, 3),
        (2, 4),
        (3, 4),
    ],
    5,
);
pub const SLASH: Character = Character::new(&[(0, 1), (1, 2), (2, 3), (3, 4), (4, 5)], 5);
pub const LESS: Character =
    Character::new(&[(0, 3), (1, 4), (2, 5), (3, 6), (1, 2), (2, 1), (3, 0)], 4);
pub const MORE: Character =
    Character::new(&[(3, 3), (2, 4), (1, 5), (0, 6), (2, 2), (1, 1), (0, 0)], 4);
pub const V_BAR: Character =
    Character::new(&[(0, 0), (0, 1), (0, 2), (0, 3), (0, 4), (0, 5), (0, 6)], 1);
pub const B_SLASH: Character = Character::new(&[(0, 5), (1, 4), (2, 3), (3, 2), (4, 1)], 5);
pub const EURO: Character = Character::new(
    &[
        (4, 6),
        (3, 6),
        (2, 6),
        (1, 5),
        (1, 4),
        (1, 3),
        (1, 2),
        (1, 1),
        (2, 0),
        (3, 0),
        (4, 0),
        (2, 4),
        (0, 4),
        (2, 2),
        (0, 2),
    ],
    5,
);
pub const POUND: Character = Character::new(
    &[
        (4, 0),
        (3, 0),
        (2, 0),
        (1, 0),
        (0, 0),
        (1, 1),
        (1, 2),
        (1, 3),
        (1, 4),
        (1, 5),
        (2, 6),
        (3, 6),
        (4, 5),
        (0, 3),
        (2, 3),
    ],
    5,
);
pub const L_BRACKET: Character = Character::new(
    &[
        (0, 0),
        (0, 1),
        (0, 2),
        (0, 3),
        (0, 4),
        (0, 5),
        (0, 6),
        (1, 6),
        (1, 0),
    ],
    2,
);
pub const R_BRACKET: Character = Character::new(
    &[
        (1, 0),
        (1, 1),
        (1, 2),
        (1, 3),
        (1, 4),
        (1, 5),
        (1, 6),
        (0, 6),
        (0, 0),
    ],
    2,
);
pub const L_BRACE: Character =
    Character::new(&[(2, 0), (1, 1), (1, 2), (0, 3), (1, 4), (1, 5), (2, 6)], 3);
pub const R_BRACE: Character =
    Character::new(&[(0, 0), (1, 1), (1, 2), (2, 3), (1, 4), (1, 5), (0, 6)], 3);
pub const U_SCORE: Character = Character::new(&[(4, 0), (3, 0), (2, 0), (1, 0), (0, 0)], 5);
pub const CURSOR: Character = Character::new(
    &[
        (4, 0),
        (3, 0),
        (2, 0),
        (1, 0),
        (0, 0),
        (4, 1),
        (3, 1),
        (2, 1),
        (1, 1),
        (0, 1),
        (4, 2),
        (3, 2),
        (2, 2),
        (1, 2),
        (0, 2),
        (4, 3),
        (3, 3),
        (2, 3),
        (1, 3),
        (0, 3),
        (4, 4),
        (3, 4),
        (2, 4),
        (1, 4),
        (0, 4),
        (4, 5),
        (3, 5),
        (2, 5),
        (1, 5),
        (0, 5),
        (4, 6),
        (3, 6),
        (2, 6),
        (1, 6),
        (0, 6),
    ],
    5,
);
pub const TILDE: Character = Character::new(&[(0, 5), (1, 6), (2, 5), (3, 6)], 4);
